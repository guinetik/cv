name: Build and Release CV

on:
  push:
    branches: [ master, main ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: read

jobs:
  build-cv:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: docker build -t cv-builder .
      
    - name: Compile CVs to PDF
      run: docker run --rm -v ${{ github.workspace }}:/workspace cv-builder sh -c "cd en && lualatex cv.tex && cd ../pt && lualatex cv.tex"
      
    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cv-english
        path: en/cv.pdf
        retention-days: 30
        
    - name: Upload Portuguese PDF artifact
      uses: actions/upload-artifact@v4
      with:
        name: cv-portuguese
        path: pt/cv.pdf
        retention-days: 30

  create-release:
    needs: build-cv
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download English PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: cv-english
        path: ./en/
        
    - name: Download Portuguese PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: cv-portuguese
        path: ./pt/
        
    - name: Debug file locations
      run: |
        echo "=== Current directory structure ==="
        find . -name "*.pdf" -type f
        echo "=== Contents of en/ directory ==="
        ls -la en/ || echo "en/ directory not found"
        echo "=== Contents of pt/ directory ==="
        ls -la pt/ || echo "pt/ directory not found"
        
    - name: Rename PDF files
      run: |
        if [ -f "en/cv.pdf" ]; then
          mv en/cv.pdf "CV - João Guilherme - English.pdf"
          echo "English PDF renamed successfully"
        else
          echo "ERROR: en/cv.pdf not found"
          exit 1
        fi
        
        if [ -f "pt/cv.pdf" ]; then
          mv pt/cv.pdf "CV - João Guilherme - Português.pdf"
          echo "Portuguese PDF renamed successfully"
        else
          echo "ERROR: pt/cv.pdf not found"
          exit 1
        fi
        
    - name: Verify renamed files exist
      run: |
        echo "=== Verifying renamed files ==="
        ls -la "CV - João Guilherme - English.pdf" || echo "English PDF not found"
        ls -la "CV - João Guilherme - Português.pdf" || echo "Portuguese PDF not found"
        echo "=== All files in current directory ==="
        ls -la *.pdf || echo "No PDF files found in current directory"
        
    - name: Generate version tag
      id: version
      run: |
        # Read current version from file or start at 1.0.0
        if [ -f version.txt ]; then
          CURRENT_VERSION=$(cat version.txt)
          # Increment patch version
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
        else
          NEW_VERSION="1.0.0"
        fi
        
        # Update version file
        echo "$NEW_VERSION" > version.txt
        
        # Commit the updated version file back to the repository
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "Bump version to $NEW_VERSION" || echo "No changes to commit"
        
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $NEW_VERSION"
        
    - name: Push version update
      run: |
        git push origin HEAD:master || echo "Push failed or no changes to push"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: CV v${{ steps.version.outputs.version }}
        body: |
          ## João Guilherme Ribeiro de Sousa - CVs
          
          **Generated on:** ${{ github.event.head_commit.timestamp }}
          **Commit:** ${{ github.sha }}
          
          This release contains both English and Portuguese versions of the CV, automatically generated from the latest commit to master.
          
          - **English CV**: `CV - João Guilherme - English.pdf`
          - **Portuguese CV**: `CV - João Guilherme - Português.pdf`
        files: |
          CV - João Guilherme - English.pdf
          CV - João Guilherme - Português.pdf
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
